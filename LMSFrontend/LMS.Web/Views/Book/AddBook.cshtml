@model LMS.Model.BookModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}
<div class="container">
    <div class="content">
        @if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}
        <div class="card ">
        <div class="card-header bg-info text-white">
            Book Form
        </div>
        <div class="card-body">
            <form id="bookForm" method="post" asp-controller="Book" asp-action="AddOrUpdateBook">
                <input type="hidden" asp-for="BookID" />

                <!-- First Row -->
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="title" class="col-form-label">
                            Title <span class="text-red text" aria-hidden="true">*</span>
                        </label>
                        <input type="text" class="form-control" id="title" name="Title" value="@Model?.Title" required>
                    </div>

                        <div class="col-sm-3">
                            <label for="author" class="col-form-label">
                                Author <span class="text-red text" aria-hidden="true">*</span>
                            </label>
                            <div class="form-group">
                               
                                @Html.DropDownListFor(model => model.AuthorID, Model.AuthorList, "Select", new { @class = "form-control", id = "author", required = "required" })
                            </div>
                        </div>


                        <div class="col-sm-3">
                            <label for="publishedDate" class="col-form-label">
                                Published Date <span class="text-red text" aria-hidden="true">*</span>
                            </label>
                            <div class="input-group date" data-provide="datepicker">
                                <input type="text" class="form-control" id="publishedDateInput" name="PublishedDate" required value="@((Model?.PublishedDate != null) ? Model.PublishedDate.Value.ToString("yyyy-MM-dd") : "")">
                                <div class="input-group-addon">
                                    <span class="glyphicon glyphicon-th"></span>
                                </div>
                            </div>
                        </div>



                    <div class="col-sm-3">
                        <label for="iSBN" class="col-form-label">
                            ISBN <span class="text-red text" aria-hidden="true">*</span>
                        </label>
                            <input type="text" class="form-control" id="iSBN" name="ISBN" value="@Model?.ISBN" required>
                    </div>
                </div>

                <!-- Second Row -->
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="availableCopies" class="col-form-label">
                            Available Copies <span class="text-red text" aria-hidden="true">*</span>
                        </label>
                        <input type="text" class="form-control" id="availableCopies" name="AvailableCopies" value="@Model?.AvailableCopies" required onkeyup="fncCheckDigit(this)">
                    </div>

                    <div class="col-sm-3">
                        <label for="totalCopies" class="col-form-label">
                            Total Copies <span class="text-red text" aria-hidden="true">*</span>
                        </label>
                            <input type="text" class="form-control" id="totalCopies" name="TotalCopies" value="@Model?.TotalCopies" required onkeyup="fncCheckDigit(this)">
                    </div>

                    <div class="col-sm-1">
                        <div class="row" style="margin-top:37px">
                            <div class="col-md-12">

                        <button type="submit" class="btn btn-primary">@(Model?.BookID == 0 ? "Submit" : "Update")</button>
                        </div>
                        </div>
                    </div>

                </div>
            </form>
        </div>
    </div>
    </div>
</div>
<div class="container mt-4" id="BookList">

</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
       $(document).ready(function () {
           GetBookList();
        $('.date').datepicker({
            dateFormat: 'yy-mm-dd',
            onSelect: function(dateText) {
                $(this).val(dateText);
            }
        });
    });
        function submitForm() {

            var formData = $('#bookForm').serialize();
            $.ajax({
                url: '@Url.Action("AddOrUpdateBook", "Book")',
                type: 'POST',
                data: formData,
                success: function (response) {

                    GetBookList();
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    alert('submitted Failled!');
                }
            });
        }
        function GetBookList() {
            $("#BookList").html("");

            $.ajax({
                type: "POST",
                url: "/Book/BookList",
                success: function (response) {
                    $("#BookList").html(response);
                    $('#tblBook').DataTable({
                        "paging": true,
                        "pageLength": 10,
                        "lengthChange": true,
                        "searching": true,
                        "ordering": false,
                        "info": true,
                        "autoWidth": false,
                        "responsive": true,
                    });
                }
            })
        }
        function DeleteBook(id) {
            if (confirm('Are you sure to delete this book?')) {
                $.ajax({
                    url: '/Book/DeleteBook/' + id,
                    type: 'DELETE',
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (xhr, status, error) {

                        alert(xhr.responseText);
                    }
                });
            }
        }
        function fncCheckDigit(el) {
            el.value = el.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        }


    </script>
}
